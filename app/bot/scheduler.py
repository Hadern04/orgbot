import logging
from datetime import date
from aiogram import Bot
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from app.api.dao import EventDAO, ChatDAO


async def send_daily_events_summary(bot: Bot):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–¥–∫—É —Å–æ–±—ã—Ç–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤ –∑–∞–¥–∞–Ω–Ω—ã–π —á–∞—Ç.
    """
    logging.info("–ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...")
    # 1. –ù–∞–π—Ç–∏ —á–∞—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    target_chat = await ChatDAO.get_notification_target()
    if not target_chat:
        logging.warning("–ù–µ –Ω–∞–π–¥–µ–Ω —á–∞—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –ü—Ä–æ–ø—É—Å–∫–∞—é.")
        return

    # 2. –ù–∞–π—Ç–∏ –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    today_events = await EventDAO.find_events_for_date(target_date=date.today())

    # 3. –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not today_events:
        message_text = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è\n\n–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Å–æ–±—ã—Ç–∏–π –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ."
    else:
        message_text = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è\n\n**–ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:**\n\n"
        for event in today_events:
            message_text += f"‚ñ™Ô∏è **{event.title}**\n"
            if event.location:
                message_text += f"   üìç {event.location}\n"
        message_text += "\n–í—Å–µ–º –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–Ω—è!"

    try:
        await bot.send_message(
            chat_id=target_chat.chat_id,
            text=message_text
        )
        logging.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–≤–æ–¥–∫–∞ —Å–æ–±—ã—Ç–∏–π –≤ —á–∞—Ç {target_chat.chat_title}")
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {target_chat.chat_id}: {e}")


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
